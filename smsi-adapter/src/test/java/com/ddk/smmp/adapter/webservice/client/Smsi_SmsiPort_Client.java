package com.ddk.smmp.adapter.webservice.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

import com.ddk.smmp.adapter.utils.Constants;
import com.ddk.smmp.adapter.webservice.entity.BalanceRequest;
import com.ddk.smmp.adapter.webservice.entity.SubmitRequest;

/**
 * This class was generated by Apache CXF 2.7.8 2014-07-10T16:11:54.945+08:00
 * Generated source version: 2.7.8
 * 
 */
public final class Smsi_SmsiPort_Client {

	private static final QName SERVICE_NAME = new QName("http://www.sioo.cn/smsi/", "SmsiService");

	private Smsi_SmsiPort_Client() {
		
	}

	public static void main(String args[]) throws java.lang.Exception {
		URL wsdlURL = SmsiService.WSDL_LOCATION;
		if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
			File wsdlFile = new File(args[0]);
			try {
				if (wsdlFile.exists()) {
					wsdlURL = wsdlFile.toURI().toURL();
				} else {
					wsdlURL = new URL(args[0]);
				}
			} catch (MalformedURLException e) {
				e.printStackTrace();
			}
		}

		SmsiService ss = new SmsiService(wsdlURL, SERVICE_NAME);
		Smsi port = ss.getSmsiPort();

		String[] phones2 = new String[2000];
		for(int i = 10001000; i <= 10002999; i ++){
			phones2[i-10001000] = "152" + i;
		}
		String key = "OfwcAPYjoH0DIsSdFP+DRw==";
		String userName = "leeson";
		String password = "qwe123!@#";
		String content = "大家下午好，今天下午6点在小会议室开会商讨上市方案，请提前安排好工作，准时参会。";
		Integer productId = 9;
		String sendTime = "";
		String expId = "";
		{
			SubmitRequest request = new SubmitRequest(password, phones2, content, expId, productId, sendTime);
			
			System.out.println("Invoking invoke...");
			int _invoke_commandId = Constants.WEBSERVICE_COMMAND_SUBMIT;
			java.lang.String _invoke_uId = userName;
			java.lang.String _invoke_body = request.toJson(key);
			java.lang.String _invoke__return = port.invoke(_invoke_commandId, _invoke_uId, _invoke_body);
			System.out.println("invoke.result=" + _invoke__return);
		}
		
		{
			BalanceRequest request = new BalanceRequest(password);
			
			System.out.println("Invoking invoke...");
			int _invoke_commandId = Constants.WEBSERVICE_COMMAND_BALANCE;
			java.lang.String _invoke_uId = userName;
			java.lang.String _invoke_body = request.toJson(key);
			java.lang.String _invoke__return = port.invoke(_invoke_commandId, _invoke_uId, _invoke_body);
			System.out.println("invoke.result=" + _invoke__return);
		}

		System.exit(0);
	}
}